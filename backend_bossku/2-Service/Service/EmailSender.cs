using backend_bossku._1_Core.Entities;
using backend_bossku._2_Service.Service.Interface;
using Microsoft.Extensions.Options;
using System;
using System.Net;
using System.Net.Mail;
using System.Threading.Tasks;

public class EmailSender : IEmailSender
{
    private readonly EmailSettings _emailSettings;

    public EmailSender(IOptions<EmailSettings> emailSettings)
    {
        _emailSettings = emailSettings.Value;
    }

    public async Task SendEmailAsync(string email, string name)
    {
        var smtpClient = new SmtpClient(_emailSettings.SmtpServer)
        {
            Port = _emailSettings.SmtpPort,
            Credentials = new NetworkCredential(_emailSettings.SmtpUsername, _emailSettings.SmtpPassword),
            EnableSsl = true,
        };
        var confirmationLink = GenerateConfirmationLink();
        var subject = "Bossku Registration Verification";
        var message = $@"<html>
                    <body>
                        <p>Dear {name},</p>
                        
                        <p>Thank you for creating a new investor account with us!</p>
                        
                        <p>To complete your registration, please click on the following link:</p>
                        <p><a href='{confirmationLink}'>{confirmationLink}</a></p>
                        
                        <p>This link will verify your email address and activate your account.</p>
                        
                        <p>Congratulations once again on becoming a part of our community.</p>
                        
                        <p>Best regards,<br/>
                           {_emailSettings.SenderName}
                        </p>
                    </body>
                  </html>";
        var mailMessage = new MailMessage
        {
            From = new MailAddress(_emailSettings.SenderEmail, _emailSettings.SenderName),
            Subject = subject,
            Body = message,
            IsBodyHtml = true,
        };

        mailMessage.To.Add(email);

        await smtpClient.SendMailAsync(mailMessage);
    }

    private string GenerateConfirmationLink()
    {
        // Generate a unique confirmation token or link
        // This can be a token generated by your application, or a link to your confirmation endpoint
        // For simplicity, this example assumes a simple token is generated
        var token = Guid.NewGuid().ToString();

        // Construct the confirmation link
        var confirmationLink = $"https://yourapp.com/Api/Investor/ConfirmRegistration?token={token}";

        return confirmationLink;
    }
}

